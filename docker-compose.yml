version: '3.8'

services:
  db:
    image: postgres:15
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - bot-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  bot:
    build: .
    command: bash -c "python bot/discord_bot.py"
    environment:
      DISCORD_BOT_TOKEN: ${DISCORD_BOT_TOKEN}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      PREMIUM_ROLE_ID: ${PREMIUM_ROLE_ID}
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
      STRIPE_SECRET_KEY: ${STRIPE_SECRET_KEY}
      ADMIN_USER_ID: ${ADMIN_USER_ID}
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8080:8080"
    networks:
      - bot-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

networks:
  bot-network:
    driver: bridge

volumes:
  postgres_data: